// Copyright (c) 2018 Timo Savola. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: gate/server/event/pb/event.proto

package pb

import (
	pb "gate.computer/gate/server/api/pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Type int32

const (
	Type_FAIL_INTERNAL          Type = 0
	Type_FAIL_NETWORK           Type = 1
	Type_FAIL_PROTOCOL          Type = 2
	Type_FAIL_REQUEST           Type = 3
	Type_IFACE_ACCESS           Type = 4
	Type_MODULE_LIST            Type = 5
	Type_MODULE_INFO            Type = 6
	Type_MODULE_UPLOAD_NEW      Type = 7
	Type_MODULE_UPLOAD_EXIST    Type = 8
	Type_MODULE_SOURCE_NEW      Type = 9
	Type_MODULE_SOURCE_EXIST    Type = 10
	Type_MODULE_DOWNLOAD        Type = 11
	Type_MODULE_PIN             Type = 12
	Type_MODULE_UNPIN           Type = 13
	Type_INSTANCE_LIST          Type = 14
	Type_INSTANCE_INFO          Type = 15
	Type_INSTANCE_CREATE_KNOWN  Type = 16
	Type_INSTANCE_CREATE_STREAM Type = 17
	Type_INSTANCE_STOP          Type = 18
	Type_INSTANCE_DELETE        Type = 19
	Type_INSTANCE_CONNECT       Type = 20
	Type_INSTANCE_DISCONNECT    Type = 21
	Type_INSTANCE_WAIT          Type = 22
	Type_INSTANCE_KILL          Type = 23
	Type_INSTANCE_SUSPEND       Type = 24
	Type_INSTANCE_RESUME        Type = 25
	Type_INSTANCE_SNAPSHOT      Type = 26
	Type_INSTANCE_UPDATE        Type = 27
	Type_INSTANCE_DEBUG         Type = 28
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		0:  "FAIL_INTERNAL",
		1:  "FAIL_NETWORK",
		2:  "FAIL_PROTOCOL",
		3:  "FAIL_REQUEST",
		4:  "IFACE_ACCESS",
		5:  "MODULE_LIST",
		6:  "MODULE_INFO",
		7:  "MODULE_UPLOAD_NEW",
		8:  "MODULE_UPLOAD_EXIST",
		9:  "MODULE_SOURCE_NEW",
		10: "MODULE_SOURCE_EXIST",
		11: "MODULE_DOWNLOAD",
		12: "MODULE_PIN",
		13: "MODULE_UNPIN",
		14: "INSTANCE_LIST",
		15: "INSTANCE_INFO",
		16: "INSTANCE_CREATE_KNOWN",
		17: "INSTANCE_CREATE_STREAM",
		18: "INSTANCE_STOP",
		19: "INSTANCE_DELETE",
		20: "INSTANCE_CONNECT",
		21: "INSTANCE_DISCONNECT",
		22: "INSTANCE_WAIT",
		23: "INSTANCE_KILL",
		24: "INSTANCE_SUSPEND",
		25: "INSTANCE_RESUME",
		26: "INSTANCE_SNAPSHOT",
		27: "INSTANCE_UPDATE",
		28: "INSTANCE_DEBUG",
	}
	Type_value = map[string]int32{
		"FAIL_INTERNAL":          0,
		"FAIL_NETWORK":           1,
		"FAIL_PROTOCOL":          2,
		"FAIL_REQUEST":           3,
		"IFACE_ACCESS":           4,
		"MODULE_LIST":            5,
		"MODULE_INFO":            6,
		"MODULE_UPLOAD_NEW":      7,
		"MODULE_UPLOAD_EXIST":    8,
		"MODULE_SOURCE_NEW":      9,
		"MODULE_SOURCE_EXIST":    10,
		"MODULE_DOWNLOAD":        11,
		"MODULE_PIN":             12,
		"MODULE_UNPIN":           13,
		"INSTANCE_LIST":          14,
		"INSTANCE_INFO":          15,
		"INSTANCE_CREATE_KNOWN":  16,
		"INSTANCE_CREATE_STREAM": 17,
		"INSTANCE_STOP":          18,
		"INSTANCE_DELETE":        19,
		"INSTANCE_CONNECT":       20,
		"INSTANCE_DISCONNECT":    21,
		"INSTANCE_WAIT":          22,
		"INSTANCE_KILL":          23,
		"INSTANCE_SUSPEND":       24,
		"INSTANCE_RESUME":        25,
		"INSTANCE_SNAPSHOT":      26,
		"INSTANCE_UPDATE":        27,
		"INSTANCE_DEBUG":         28,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_gate_server_event_pb_event_proto_enumTypes[0].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_gate_server_event_pb_event_proto_enumTypes[0]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_gate_server_event_pb_event_proto_rawDescGZIP(), []int{0}
}

type Fail_Type int32

const (
	Fail_INTERNAL Fail_Type = 0
	// FAIL_REQUEST (add new values also to server/internal/error/failrequest):
	Fail_UNSUPPORTED          Fail_Type = 1
	Fail_CLIENT_DENIED        Fail_Type = 2
	Fail_PAYLOAD_ERROR        Fail_Type = 3
	Fail_PRINCIPAL_KEY_ERROR  Fail_Type = 4
	Fail_AUTH_MISSING         Fail_Type = 5
	Fail_AUTH_INVALID         Fail_Type = 6
	Fail_AUTH_EXPIRED         Fail_Type = 7
	Fail_AUTH_REUSED          Fail_Type = 8
	Fail_AUTH_DENIED          Fail_Type = 9
	Fail_SCOPE_TOO_LARGE      Fail_Type = 10
	Fail_RESOURCE_DENIED      Fail_Type = 11
	Fail_RESOURCE_LIMIT       Fail_Type = 12
	Fail_RATE_LIMIT           Fail_Type = 13
	Fail_MODULE_NOT_FOUND     Fail_Type = 14
	Fail_MODULE_HASH_MISMATCH Fail_Type = 15
	Fail_MODULE_ERROR         Fail_Type = 16
	Fail_FUNCTION_NOT_FOUND   Fail_Type = 17
	Fail_PROGRAM_ERROR        Fail_Type = 18
	Fail_INSTANCE_NOT_FOUND   Fail_Type = 19
	Fail_INSTANCE_ID_INVALID  Fail_Type = 20
	Fail_INSTANCE_ID_EXISTS   Fail_Type = 21
	Fail_INSTANCE_STATUS      Fail_Type = 22
	Fail_INSTANCE_NO_CONNECT  Fail_Type = 23
	Fail_INSTANCE_DEBUG_STATE Fail_Type = 24
)

// Enum value maps for Fail_Type.
var (
	Fail_Type_name = map[int32]string{
		0:  "INTERNAL",
		1:  "UNSUPPORTED",
		2:  "CLIENT_DENIED",
		3:  "PAYLOAD_ERROR",
		4:  "PRINCIPAL_KEY_ERROR",
		5:  "AUTH_MISSING",
		6:  "AUTH_INVALID",
		7:  "AUTH_EXPIRED",
		8:  "AUTH_REUSED",
		9:  "AUTH_DENIED",
		10: "SCOPE_TOO_LARGE",
		11: "RESOURCE_DENIED",
		12: "RESOURCE_LIMIT",
		13: "RATE_LIMIT",
		14: "MODULE_NOT_FOUND",
		15: "MODULE_HASH_MISMATCH",
		16: "MODULE_ERROR",
		17: "FUNCTION_NOT_FOUND",
		18: "PROGRAM_ERROR",
		19: "INSTANCE_NOT_FOUND",
		20: "INSTANCE_ID_INVALID",
		21: "INSTANCE_ID_EXISTS",
		22: "INSTANCE_STATUS",
		23: "INSTANCE_NO_CONNECT",
		24: "INSTANCE_DEBUG_STATE",
	}
	Fail_Type_value = map[string]int32{
		"INTERNAL":             0,
		"UNSUPPORTED":          1,
		"CLIENT_DENIED":        2,
		"PAYLOAD_ERROR":        3,
		"PRINCIPAL_KEY_ERROR":  4,
		"AUTH_MISSING":         5,
		"AUTH_INVALID":         6,
		"AUTH_EXPIRED":         7,
		"AUTH_REUSED":          8,
		"AUTH_DENIED":          9,
		"SCOPE_TOO_LARGE":      10,
		"RESOURCE_DENIED":      11,
		"RESOURCE_LIMIT":       12,
		"RATE_LIMIT":           13,
		"MODULE_NOT_FOUND":     14,
		"MODULE_HASH_MISMATCH": 15,
		"MODULE_ERROR":         16,
		"FUNCTION_NOT_FOUND":   17,
		"PROGRAM_ERROR":        18,
		"INSTANCE_NOT_FOUND":   19,
		"INSTANCE_ID_INVALID":  20,
		"INSTANCE_ID_EXISTS":   21,
		"INSTANCE_STATUS":      22,
		"INSTANCE_NO_CONNECT":  23,
		"INSTANCE_DEBUG_STATE": 24,
	}
)

func (x Fail_Type) Enum() *Fail_Type {
	p := new(Fail_Type)
	*p = x
	return p
}

func (x Fail_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Fail_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_gate_server_event_pb_event_proto_enumTypes[1].Descriptor()
}

func (Fail_Type) Type() protoreflect.EnumType {
	return &file_gate_server_event_pb_event_proto_enumTypes[1]
}

func (x Fail_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Fail_Type.Descriptor instead.
func (Fail_Type) EnumDescriptor() ([]byte, []int) {
	return file_gate_server_event_pb_event_proto_rawDescGZIP(), []int{0, 0}
}

type Fail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      Fail_Type `protobuf:"varint,1,opt,name=type,proto3,enum=gate.server.event.Fail_Type" json:"type,omitempty"`
	Source    string    `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Module    string    `protobuf:"bytes,3,opt,name=module,proto3" json:"module,omitempty"`
	Function  string    `protobuf:"bytes,4,opt,name=function,proto3" json:"function,omitempty"`
	Instance  string    `protobuf:"bytes,5,opt,name=instance,proto3" json:"instance,omitempty"`
	Subsystem string    `protobuf:"bytes,6,opt,name=subsystem,proto3" json:"subsystem,omitempty"`
}

func (x *Fail) Reset() {
	*x = Fail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gate_server_event_pb_event_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fail) ProtoMessage() {}

func (x *Fail) ProtoReflect() protoreflect.Message {
	mi := &file_gate_server_event_pb_event_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fail.ProtoReflect.Descriptor instead.
func (*Fail) Descriptor() ([]byte, []int) {
	return file_gate_server_event_pb_event_proto_rawDescGZIP(), []int{0}
}

func (x *Fail) GetType() Fail_Type {
	if x != nil {
		return x.Type
	}
	return Fail_INTERNAL
}

func (x *Fail) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Fail) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *Fail) GetFunction() string {
	if x != nil {
		return x.Function
	}
	return ""
}

func (x *Fail) GetInstance() string {
	if x != nil {
		return x.Instance
	}
	return ""
}

func (x *Fail) GetSubsystem() string {
	if x != nil {
		return x.Subsystem
	}
	return ""
}

type Module struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module   string `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	Source   string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`                      // MODULE_SOURCE_NEW, MODULE_SOURCE_EXIST
	Compiled bool   `protobuf:"varint,3,opt,name=compiled,proto3" json:"compiled,omitempty"`                 // MODULE_UPLOAD_EXIST, MODULE_SOURCE_EXIST
	Length   int64  `protobuf:"varint,4,opt,name=length,proto3" json:"length,omitempty"`                     // MODULE_DOWNLOAD
	TagCount int32  `protobuf:"varint,5,opt,name=tag_count,json=tagCount,proto3" json:"tag_count,omitempty"` // MODULE_PIN
}

func (x *Module) Reset() {
	*x = Module{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gate_server_event_pb_event_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Module) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module) ProtoMessage() {}

func (x *Module) ProtoReflect() protoreflect.Message {
	mi := &file_gate_server_event_pb_event_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module.ProtoReflect.Descriptor instead.
func (*Module) Descriptor() ([]byte, []int) {
	return file_gate_server_event_pb_event_proto_rawDescGZIP(), []int{1}
}

func (x *Module) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *Module) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Module) GetCompiled() bool {
	if x != nil {
		return x.Compiled
	}
	return false
}

func (x *Module) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *Module) GetTagCount() int32 {
	if x != nil {
		return x.TagCount
	}
	return 0
}

type Instance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instance  string     `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
	Module    string     `protobuf:"bytes,2,opt,name=module,proto3" json:"module,omitempty"`                      // INSTANCE_CREATE, INSTANCE_SNAPSHOT
	Function  string     `protobuf:"bytes,3,opt,name=function,proto3" json:"function,omitempty"`                  // INSTANCE_RESUME
	Transient bool       `protobuf:"varint,4,opt,name=transient,proto3" json:"transient,omitempty"`               // INSTANCE_CREATE_KNOWN, INSTANCE_CREATE_STREAM
	Suspended bool       `protobuf:"varint,5,opt,name=suspended,proto3" json:"suspended,omitempty"`               // INSTANCE_CREATE_KNOWN, INSTANCE_CREATE_STREAM
	Persist   bool       `protobuf:"varint,6,opt,name=persist,proto3" json:"persist,omitempty"`                   // INSTANCE_UPDATE
	Compiled  bool       `protobuf:"varint,7,opt,name=compiled,proto3" json:"compiled,omitempty"`                 // INSTANCE_DEBUG
	Status    *pb.Status `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`                      // INSTANCE_STOP
	TagCount  int32      `protobuf:"varint,9,opt,name=tag_count,json=tagCount,proto3" json:"tag_count,omitempty"` // INSTANCE_CREATE_KNOWN, INSTANCE_CREATE_STREAM, INSTANCE_UPDATE
}

func (x *Instance) Reset() {
	*x = Instance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gate_server_event_pb_event_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instance) ProtoMessage() {}

func (x *Instance) ProtoReflect() protoreflect.Message {
	mi := &file_gate_server_event_pb_event_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instance.ProtoReflect.Descriptor instead.
func (*Instance) Descriptor() ([]byte, []int) {
	return file_gate_server_event_pb_event_proto_rawDescGZIP(), []int{2}
}

func (x *Instance) GetInstance() string {
	if x != nil {
		return x.Instance
	}
	return ""
}

func (x *Instance) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *Instance) GetFunction() string {
	if x != nil {
		return x.Function
	}
	return ""
}

func (x *Instance) GetTransient() bool {
	if x != nil {
		return x.Transient
	}
	return false
}

func (x *Instance) GetSuspended() bool {
	if x != nil {
		return x.Suspended
	}
	return false
}

func (x *Instance) GetPersist() bool {
	if x != nil {
		return x.Persist
	}
	return false
}

func (x *Instance) GetCompiled() bool {
	if x != nil {
		return x.Compiled
	}
	return false
}

func (x *Instance) GetStatus() *pb.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *Instance) GetTagCount() int32 {
	if x != nil {
		return x.TagCount
	}
	return 0
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type Type     `protobuf:"varint,1,opt,name=type,proto3,enum=gate.server.event.Type" json:"type,omitempty"`
	Meta *pb.Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// Types that are assignable to Info:
	//
	//	*Event_Fail
	//	*Event_Module
	//	*Event_Instance
	Info isEvent_Info `protobuf_oneof:"info"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gate_server_event_pb_event_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_gate_server_event_pb_event_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_gate_server_event_pb_event_proto_rawDescGZIP(), []int{3}
}

func (x *Event) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_FAIL_INTERNAL
}

func (x *Event) GetMeta() *pb.Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (m *Event) GetInfo() isEvent_Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (x *Event) GetFail() *Fail {
	if x, ok := x.GetInfo().(*Event_Fail); ok {
		return x.Fail
	}
	return nil
}

func (x *Event) GetModule() *Module {
	if x, ok := x.GetInfo().(*Event_Module); ok {
		return x.Module
	}
	return nil
}

func (x *Event) GetInstance() *Instance {
	if x, ok := x.GetInfo().(*Event_Instance); ok {
		return x.Instance
	}
	return nil
}

type isEvent_Info interface {
	isEvent_Info()
}

type Event_Fail struct {
	Fail *Fail `protobuf:"bytes,3,opt,name=fail,proto3,oneof"`
}

type Event_Module struct {
	Module *Module `protobuf:"bytes,4,opt,name=module,proto3,oneof"`
}

type Event_Instance struct {
	Instance *Instance `protobuf:"bytes,5,opt,name=instance,proto3,oneof"`
}

func (*Event_Fail) isEvent_Info() {}

func (*Event_Module) isEvent_Info() {}

func (*Event_Instance) isEvent_Info() {}

var File_gate_server_event_pb_event_proto protoreflect.FileDescriptor

var file_gate_server_event_pb_event_proto_rawDesc = []byte{
	0x0a, 0x20, 0x67, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2f, 0x70, 0x62, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x11, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x1d, 0x67, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x62, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x62, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc9, 0x05, 0x0a, 0x04, 0x46, 0x61, 0x69, 0x6c, 0x12, 0x30,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x46, 0x61, 0x69, 0x6c, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x22, 0x88, 0x04, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0f, 0x0a,
	0x0b, 0x55, 0x4e, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x11,
	0x0a, 0x0d, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x10,
	0x02, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x41, 0x59, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x52, 0x49, 0x4e, 0x43, 0x49, 0x50, 0x41,
	0x4c, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x10, 0x0a,
	0x0c, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x12,
	0x10, 0x0a, 0x0c, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10,
	0x06, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45,
	0x44, 0x10, 0x07, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x52, 0x45, 0x55, 0x53,
	0x45, 0x44, 0x10, 0x08, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x44, 0x45, 0x4e,
	0x49, 0x45, 0x44, 0x10, 0x09, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x43, 0x4f, 0x50, 0x45, 0x5f, 0x54,
	0x4f, 0x4f, 0x5f, 0x4c, 0x41, 0x52, 0x47, 0x45, 0x10, 0x0a, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x45,
	0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x10, 0x0b, 0x12,
	0x12, 0x0a, 0x0e, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x4c, 0x49, 0x4d, 0x49,
	0x54, 0x10, 0x0c, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x49, 0x4d, 0x49,
	0x54, 0x10, 0x0d, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x4f, 0x44, 0x55, 0x4c, 0x45, 0x5f, 0x4e, 0x4f,
	0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x0e, 0x12, 0x18, 0x0a, 0x14, 0x4d, 0x4f, 0x44,
	0x55, 0x4c, 0x45, 0x5f, 0x48, 0x41, 0x53, 0x48, 0x5f, 0x4d, 0x49, 0x53, 0x4d, 0x41, 0x54, 0x43,
	0x48, 0x10, 0x0f, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x4f, 0x44, 0x55, 0x4c, 0x45, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x10, 0x12, 0x16, 0x0a, 0x12, 0x46, 0x55, 0x4e, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x11, 0x12, 0x11, 0x0a,
	0x0d, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x41, 0x4d, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x12,
	0x12, 0x16, 0x0a, 0x12, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x13, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x4e, 0x53, 0x54,
	0x41, 0x4e, 0x43, 0x45, 0x5f, 0x49, 0x44, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10,
	0x14, 0x12, 0x16, 0x0a, 0x12, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x49, 0x44,
	0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x10, 0x15, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4e, 0x53,
	0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x16, 0x12, 0x17,
	0x0a, 0x13, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x5f, 0x43, 0x4f,
	0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x17, 0x12, 0x18, 0x0a, 0x14, 0x49, 0x4e, 0x53, 0x54, 0x41,
	0x4e, 0x43, 0x45, 0x5f, 0x44, 0x45, 0x42, 0x55, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10,
	0x18, 0x22, 0x89, 0x01, 0x0a, 0x06, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x67, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x61, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x96, 0x02,
	0x0a, 0x08, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x73, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x75, 0x73,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x67,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x61,
	0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x82, 0x02, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04,
	0x6d, 0x65, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x04, 0x66, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x04, 0x66,
	0x61, 0x69, 0x6c, 0x12, 0x33, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x48, 0x00,
	0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x2a, 0xe0, 0x04, 0x0a, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x41, 0x49, 0x4c, 0x5f, 0x49, 0x4e, 0x54,
	0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x41, 0x49, 0x4c, 0x5f,
	0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x41, 0x49,
	0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c,
	0x46, 0x41, 0x49, 0x4c, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x03, 0x12, 0x10,
	0x0a, 0x0c, 0x49, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x04,
	0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x4f, 0x44, 0x55, 0x4c, 0x45, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10,
	0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x4f, 0x44, 0x55, 0x4c, 0x45, 0x5f, 0x49, 0x4e, 0x46, 0x4f,
	0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x4f, 0x44, 0x55, 0x4c, 0x45, 0x5f, 0x55, 0x50, 0x4c,
	0x4f, 0x41, 0x44, 0x5f, 0x4e, 0x45, 0x57, 0x10, 0x07, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x4f, 0x44,
	0x55, 0x4c, 0x45, 0x5f, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54,
	0x10, 0x08, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x4f, 0x44, 0x55, 0x4c, 0x45, 0x5f, 0x53, 0x4f, 0x55,
	0x52, 0x43, 0x45, 0x5f, 0x4e, 0x45, 0x57, 0x10, 0x09, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x4f, 0x44,
	0x55, 0x4c, 0x45, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54,
	0x10, 0x0a, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x4f, 0x44, 0x55, 0x4c, 0x45, 0x5f, 0x44, 0x4f, 0x57,
	0x4e, 0x4c, 0x4f, 0x41, 0x44, 0x10, 0x0b, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x4f, 0x44, 0x55, 0x4c,
	0x45, 0x5f, 0x50, 0x49, 0x4e, 0x10, 0x0c, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x4f, 0x44, 0x55, 0x4c,
	0x45, 0x5f, 0x55, 0x4e, 0x50, 0x49, 0x4e, 0x10, 0x0d, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x53,
	0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x0e, 0x12, 0x11, 0x0a, 0x0d,
	0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x0f, 0x12,
	0x19, 0x0a, 0x15, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41,
	0x54, 0x45, 0x5f, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x10, 0x12, 0x1a, 0x0a, 0x16, 0x49, 0x4e,
	0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54,
	0x52, 0x45, 0x41, 0x4d, 0x10, 0x11, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e,
	0x43, 0x45, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x10, 0x12, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4e, 0x53,
	0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x13, 0x12, 0x14,
	0x0a, 0x10, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45,
	0x43, 0x54, 0x10, 0x14, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45,
	0x5f, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x15, 0x12, 0x11, 0x0a,
	0x0d, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x10, 0x16,
	0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x4b, 0x49, 0x4c,
	0x4c, 0x10, 0x17, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f,
	0x53, 0x55, 0x53, 0x50, 0x45, 0x4e, 0x44, 0x10, 0x18, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4e, 0x53,
	0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4d, 0x45, 0x10, 0x19, 0x12, 0x15,
	0x0a, 0x11, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x53, 0x4e, 0x41, 0x50, 0x53,
	0x48, 0x4f, 0x54, 0x10, 0x1a, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43,
	0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x1b, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e,
	0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x44, 0x45, 0x42, 0x55, 0x47, 0x10, 0x1c, 0x42, 0x24,
	0x5a, 0x22, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x2f,
	0x67, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gate_server_event_pb_event_proto_rawDescOnce sync.Once
	file_gate_server_event_pb_event_proto_rawDescData = file_gate_server_event_pb_event_proto_rawDesc
)

func file_gate_server_event_pb_event_proto_rawDescGZIP() []byte {
	file_gate_server_event_pb_event_proto_rawDescOnce.Do(func() {
		file_gate_server_event_pb_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_gate_server_event_pb_event_proto_rawDescData)
	})
	return file_gate_server_event_pb_event_proto_rawDescData
}

var file_gate_server_event_pb_event_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_gate_server_event_pb_event_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_gate_server_event_pb_event_proto_goTypes = []interface{}{
	(Type)(0),         // 0: gate.server.event.Type
	(Fail_Type)(0),    // 1: gate.server.event.Fail.Type
	(*Fail)(nil),      // 2: gate.server.event.Fail
	(*Module)(nil),    // 3: gate.server.event.Module
	(*Instance)(nil),  // 4: gate.server.event.Instance
	(*Event)(nil),     // 5: gate.server.event.Event
	(*pb.Status)(nil), // 6: gate.server.Status
	(*pb.Meta)(nil),   // 7: gate.server.Meta
}
var file_gate_server_event_pb_event_proto_depIdxs = []int32{
	1, // 0: gate.server.event.Fail.type:type_name -> gate.server.event.Fail.Type
	6, // 1: gate.server.event.Instance.status:type_name -> gate.server.Status
	0, // 2: gate.server.event.Event.type:type_name -> gate.server.event.Type
	7, // 3: gate.server.event.Event.meta:type_name -> gate.server.Meta
	2, // 4: gate.server.event.Event.fail:type_name -> gate.server.event.Fail
	3, // 5: gate.server.event.Event.module:type_name -> gate.server.event.Module
	4, // 6: gate.server.event.Event.instance:type_name -> gate.server.event.Instance
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_gate_server_event_pb_event_proto_init() }
func file_gate_server_event_pb_event_proto_init() {
	if File_gate_server_event_pb_event_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gate_server_event_pb_event_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gate_server_event_pb_event_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Module); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gate_server_event_pb_event_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gate_server_event_pb_event_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_gate_server_event_pb_event_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Event_Fail)(nil),
		(*Event_Module)(nil),
		(*Event_Instance)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gate_server_event_pb_event_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gate_server_event_pb_event_proto_goTypes,
		DependencyIndexes: file_gate_server_event_pb_event_proto_depIdxs,
		EnumInfos:         file_gate_server_event_pb_event_proto_enumTypes,
		MessageInfos:      file_gate_server_event_pb_event_proto_msgTypes,
	}.Build()
	File_gate_server_event_pb_event_proto = out.File
	file_gate_server_event_pb_event_proto_rawDesc = nil
	file_gate_server_event_pb_event_proto_goTypes = nil
	file_gate_server_event_pb_event_proto_depIdxs = nil
}
