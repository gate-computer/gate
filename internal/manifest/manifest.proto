// Copyright (c) 2019 Timo Savola. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

syntax = "proto3";

package manifest;

message ByteRange {
	int64 offset = 1;
	int64 length = 2;
}

message Program {
	uint64 text_addr = 1; // Nonzero if suspended.
	uint32 text_size = 2;
	uint32 stack_usage = 3; // Nonzero if suspended.
	uint32 globals_size = 4;
	uint32 memory_data_size = 5;
	uint32 memory_size = 6;
	uint32 memory_size_limit = 7;
	uint32 init_routine = 8;
	int64 module_size = 9;
	repeated ByteRange sections = 10;
	ByteRange snapshot_section = 11;
	ByteRange buffer_section = 12;
	int64 buffer_section_header_length = 13;
	ByteRange stack_section = 14;
	bytes global_types = 15;                // Limited by wag's maxGlobals check.
	map<string, uint32> entry_indexes = 16; // Limited by func name len and wag's maxExports check.
	map<uint32, uint32> entry_addrs = 17;
	uint32 call_sites_size = 18;
	uint32 func_addrs_size = 19;
	bool random = 20;
	Snapshot snapshot = 21;
}

message Instance {
	uint64 text_addr = 1; // Nonzero if suspended.
	uint32 stack_size = 2;
	uint32 stack_usage = 3; // Nonzero if suspended.
	uint32 globals_size = 4;
	uint32 memory_size = 5;
	uint32 max_memory_size = 6;
	uint32 init_routine = 7;
	uint32 entry_index = 8;
	uint32 entry_addr = 9;
	Snapshot snapshot = 10;
}

message Snapshot {
	uint64 monotonic_time = 1;
}
