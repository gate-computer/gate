// Copyright (c) 2019 Timo Savola. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

syntax = "proto3";

package manifest;

option go_package = "github.com/tsavola/gate/internal/manifest";

message ByteRange {
	int64 offset = 1;
	int64 length = 2;
}

message Program {
	uint64 text_addr = 1;
	uint32 text_size = 2;
	uint32 stack_usage = 3;
	uint32 globals_size = 4;
	uint32 memory_size = 5;
	sint64 memory_size_limit = 6;
	uint32 memory_data_size = 7;
	int64 module_size = 8;
	repeated ByteRange sections = 9;
	ByteRange snapshot_section = 10;
	ByteRange export_section_wrap = 11;
	ByteRange buffer_section = 12;
	int64 buffer_section_header_length = 13;
	ByteRange stack_section = 14;
	bytes global_types = 15; // Limited by wag's maxGlobals check.
	Function start_func = 16;
	map<string, uint32> entry_indexes = 17; // Limited by func name len and wag's maxExports check.
	map<uint32, uint32> entry_addrs = 18;
	uint32 call_sites_size = 19;
	uint32 func_addrs_size = 20;
	bool random = 21;
	Snapshot snapshot = 22;
}

message Instance {
	uint64 text_addr = 1;
	uint32 stack_size = 2;
	uint32 stack_usage = 3;
	uint32 globals_size = 4;
	uint32 memory_size = 5;
	uint32 max_memory_size = 6;
	uint32 init_routine = 7;
	Function start_func = 8;
	Function entry_func = 9;
	Snapshot snapshot = 10;
}

message Function {
	sint64 index = 1;
	uint32 addr = 2;
}

message Snapshot {
	uint64 flags = 1;
	int32 trap = 2;
	int32 result = 3;
	uint64 monotonic_time = 4;
	Breakpoints breakpoints = 5;
}

message Breakpoints {
	repeated uint64 offsets = 1;
}
