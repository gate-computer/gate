// Copyright (c) 2018 Timo Savola. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

syntax = "proto3";

package event;

option go_package = "github.com/tsavola/gate/server/event";

import "server/detail/detail.proto";

message Event {
	enum Type {
		FailInternal = 0;
		FailNetwork = 1;
		FailProtocol = 2;
		FailRequest = 3;
		IfaceAccess = 4;
		ModuleList = 5;
		ModuleUploadNew = 6;
		ModuleUploadExist = 7;
		ModuleSourceNew = 8;
		ModuleSourceExist = 9;
		ModuleDownload = 10;
		ModuleUnref = 11;
		InstanceList = 12;
		InstanceCreateStream = 13;
		InstanceCreateLocal = 14;
		InstanceDelete = 15;
		InstanceConnect = 16;
		InstanceDisconnect = 17;
		InstanceStatus = 18;
		InstanceWait = 19;
		InstanceSuspend = 20;
	}
}

message FailInternal {
	detail.Context ctx = 1;
	string source = 2;
	string module = 3;
	string function = 4;
	string instance = 5;
	string subsystem = 6;
}

message FailNetwork {
	detail.Context ctx = 1;
}

message FailProtocol {
	detail.Context ctx = 1;
}

message FailRequest {
	enum Type {
		Unspecified = 0;
		PayloadError = 1;
		PrincipalKeyError = 2;
		AuthMissing = 3;
		AuthInvalid = 4;
		AuthExpired = 5;
		AuthReused = 6;
		AuthDenied = 7;
		ResourceDenied = 8;
		ResourceLimit = 9;
		RateLimit = 10;
		ModuleNotFound = 11;
		ModuleHashMismatch = 12;
		ModuleError = 13;
		FunctionNotFound = 14;
		ProgramError = 15;
		InstanceNotFound = 16;
		InstanceIdInvalid = 17;
		InstanceIdExists = 18;
		InstanceNoConnect = 19;
	}

	detail.Context ctx = 1;
	Type failure = 2;
	string source = 3;
	string module = 4;
	string function = 5;
	string instance = 6;
}

message IfaceAccess {
	detail.Context ctx = 1;
}

message OpUnsupported {
	detail.Context ctx = 1;
}

message ModuleList {
	detail.Context ctx = 1;
}

message ModuleUploadNew {
	detail.Context ctx = 1;
	string module = 2;
}

message ModuleUploadExist {
	detail.Context ctx = 1;
	string module = 2;
	bool compiled = 3;
}

message ModuleSourceNew {
	detail.Context ctx = 1;
	string module = 2;
	string uri = 3;
}

message ModuleSourceExist {
	detail.Context ctx = 1;
	string module = 2;
	string uri = 3;
	bool compiled = 4;
}

message ModuleDownload {
	detail.Context ctx = 1;
	string module = 2;
}

message ModuleUnref {
	detail.Context ctx = 1;
	string module = 2;
}

message InstanceList {
	detail.Context ctx = 1;
}

message InstanceCreateStream {
	detail.Context ctx = 1;
	string instance = 2;
	string module = 3;
}

message InstanceCreateLocal {
	detail.Context ctx = 1;
	string instance = 2;
	string module = 3;
}

message InstanceDelete {
	detail.Context ctx = 1;
	string instance = 2;
}

message InstanceConnect {
	detail.Context ctx = 1;
	string instance = 2;
}

message InstanceDisconnect {
	detail.Context ctx = 1;
	string instance = 2;
}

message InstanceStatus {
	detail.Context ctx = 1;
	string instance = 2;
}

message InstanceWait {
	detail.Context ctx = 1;
	string instance = 2;
}

message InstanceSuspend {
	detail.Context ctx = 1;
	string instance = 2;
}
