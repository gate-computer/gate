// Copyright (c) 2018 Timo Savola. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

syntax = "proto3";

package gate.server.event;

import "server/api/server.proto";
import "server/detail/detail.proto";

option go_package = "gate.computer/gate/server/event";

enum Type {
	FAIL_INTERNAL = 0;
	FAIL_NETWORK = 1;
	FAIL_PROTOCOL = 2;
	FAIL_REQUEST = 3;
	IFACE_ACCESS = 4;
	MODULE_LIST = 5;
	MODULE_INFO = 6;
	MODULE_UPLOAD_NEW = 7;
	MODULE_UPLOAD_EXIST = 8;
	MODULE_SOURCE_NEW = 9;
	MODULE_SOURCE_EXIST = 10;
	MODULE_DOWNLOAD = 11;
	MODULE_PIN = 12;
	MODULE_UNPIN = 13;
	INSTANCE_LIST = 14;
	INSTANCE_INFO = 15;
	INSTANCE_CREATE_KNOWN = 16;
	INSTANCE_CREATE_STREAM = 17;
	INSTANCE_STOP = 18;
	INSTANCE_DELETE = 19;
	INSTANCE_CONNECT = 20;
	INSTANCE_DISCONNECT = 21;
	INSTANCE_WAIT = 22;
	INSTANCE_KILL = 23;
	INSTANCE_SUSPEND = 24;
	INSTANCE_RESUME = 25;
	INSTANCE_SNAPSHOT = 26;
	INSTANCE_UPDATE = 27;
	INSTANCE_DEBUG = 28;
}

message FailInternal {
	detail.Context ctx = 1;
	string source = 2;
	string module = 3;
	string function = 4;
	string instance = 5;
	string subsystem = 6;
}

message FailNetwork {
	detail.Context ctx = 1;
}

message FailProtocol {
	detail.Context ctx = 1;
}

message FailRequest {
	enum Type {
		UNSPECIFIED = 0;
		CLIENT_DENIED = 1;
		PAYLOAD_ERROR = 2;
		PRINCIPAL_KEY_ERROR = 3;
		AUTH_MISSING = 4;
		AUTH_INVALID = 5;
		AUTH_EXPIRED = 6;
		AUTH_REUSED = 7;
		AUTH_DENIED = 8;
		SCOPE_TOO_LARGE = 9;
		RESOURCE_DENIED = 10;
		RESOURCE_LIMIT = 11;
		RATE_LIMIT = 12;
		MODULE_NOT_FOUND = 13;
		MODULE_HASH_MISMATCH = 14;
		MODULE_ERROR = 15;
		FUNCTION_NOT_FOUND = 16;
		PROGRAM_ERROR = 17;
		INSTANCE_NOT_FOUND = 18;
		INSTANCE_ID_INVALID = 19;
		INSTANCE_ID_EXISTS = 20;
		INSTANCE_STATUS = 21;
		INSTANCE_NO_CONNECT = 22;
		INSTANCE_TRANSIENT = 23;
		INSTANCE_DEBUGGER = 24;
	}

	detail.Context ctx = 1;
	Type failure = 2;
	string source = 3;
	string module = 4;
	string function = 5;
	string instance = 6;
}

message IfaceAccess {
	detail.Context ctx = 1;
}

message ModuleList {
	detail.Context ctx = 1;
}

message ModuleInfo {
	detail.Context ctx = 1;
	string module = 2;
}

message ModuleUploadNew {
	detail.Context ctx = 1;
	string module = 2;
}

message ModuleUploadExist {
	detail.Context ctx = 1;
	string module = 2;
	bool compiled = 3;
}

message ModuleSourceNew {
	detail.Context ctx = 1;
	string module = 2;
	string uri = 3;
}

message ModuleSourceExist {
	detail.Context ctx = 1;
	string module = 2;
	string uri = 3;
	bool compiled = 4;
}

message ModuleDownload {
	detail.Context ctx = 1;
	string module = 2;
	uint64 module_length = 3;
	uint64 length_read = 4;
}

message ModulePin {
	detail.Context ctx = 1;
	string module = 2;
	int32 tag_count = 3;
}

message ModuleUnpin {
	detail.Context ctx = 1;
	string module = 2;
}

message InstanceList {
	detail.Context ctx = 1;
}

message InstanceInfo {
	detail.Context ctx = 1;
	string instance = 2;
}

message InstanceCreate {
	string instance = 1;
	string module = 2;
	bool transient = 3;
	bool suspended = 4;
	int32 tag_count = 5;
}

message InstanceCreateKnown {
	detail.Context ctx = 1;
	InstanceCreate create = 2;
}

message InstanceCreateStream {
	detail.Context ctx = 1;
	InstanceCreate create = 2;
}

message InstanceStop {
	detail.Context ctx = 1;
	string instance = 2;
	api.Status status = 3;
}

message InstanceDelete {
	detail.Context ctx = 1;
	string instance = 2;
}

message InstanceConnect {
	detail.Context ctx = 1;
	string instance = 2;
}

message InstanceDisconnect {
	detail.Context ctx = 1;
	string instance = 2;
}

message InstanceWait {
	detail.Context ctx = 1;
	string instance = 2;
}

message InstanceKill {
	detail.Context ctx = 1;
	string instance = 2;
}

message InstanceSuspend {
	detail.Context ctx = 1;
	string instance = 2;
}

message InstanceResume {
	detail.Context ctx = 1;
	string instance = 2;
	string function = 3;
}

message InstanceSnapshot {
	detail.Context ctx = 1;
	string instance = 2;
	string module = 3;
}

message InstanceUpdate {
	detail.Context ctx = 1;
	string instance = 2;
	bool persist = 3;
	int32 tag_count = 4;
}

message InstanceDebug {
	detail.Context ctx = 1;
	string instance = 2;
	bool compiled = 3;
}
