// Copyright (c) 2018 Timo Savola. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

syntax = "proto3";

package gate.server.event.pb;

import "server/api/meta.proto";
import "server/api/server.proto";

option go_package = "gate.computer/gate/server/event/pb";

enum Type {
  FAIL_INTERNAL = 0;
  FAIL_NETWORK = 1;
  FAIL_PROTOCOL = 2;
  FAIL_REQUEST = 3;
  IFACE_ACCESS = 4;
  MODULE_LIST = 5;
  MODULE_INFO = 6;
  MODULE_UPLOAD_NEW = 7;
  MODULE_UPLOAD_EXIST = 8;
  MODULE_SOURCE_NEW = 9;
  MODULE_SOURCE_EXIST = 10;
  MODULE_DOWNLOAD = 11;
  MODULE_PIN = 12;
  MODULE_UNPIN = 13;
  INSTANCE_LIST = 14;
  INSTANCE_INFO = 15;
  INSTANCE_CREATE_KNOWN = 16;
  INSTANCE_CREATE_STREAM = 17;
  INSTANCE_STOP = 18;
  INSTANCE_DELETE = 19;
  INSTANCE_CONNECT = 20;
  INSTANCE_DISCONNECT = 21;
  INSTANCE_WAIT = 22;
  INSTANCE_KILL = 23;
  INSTANCE_SUSPEND = 24;
  INSTANCE_RESUME = 25;
  INSTANCE_SNAPSHOT = 26;
  INSTANCE_UPDATE = 27;
  INSTANCE_DEBUG = 28;
}

message Fail {
  enum Type {
    INTERNAL = 0;

    // FAIL_REQUEST (add new values also to server/internal/error/failrequest):
    UNSUPPORTED = 1;
    CLIENT_DENIED = 2;
    PAYLOAD_ERROR = 3;
    PRINCIPAL_KEY_ERROR = 4;
    AUTH_MISSING = 5;
    AUTH_INVALID = 6;
    AUTH_EXPIRED = 7;
    AUTH_REUSED = 8;
    AUTH_DENIED = 9;
    SCOPE_TOO_LARGE = 10;
    RESOURCE_DENIED = 11;
    RESOURCE_LIMIT = 12;
    RATE_LIMIT = 13;
    MODULE_NOT_FOUND = 14;
    MODULE_HASH_MISMATCH = 15;
    MODULE_ERROR = 16;
    FUNCTION_NOT_FOUND = 17;
    PROGRAM_ERROR = 18;
    INSTANCE_NOT_FOUND = 19;
    INSTANCE_ID_INVALID = 20;
    INSTANCE_ID_EXISTS = 21;
    INSTANCE_STATUS = 22;
    INSTANCE_NO_CONNECT = 23;
    INSTANCE_DEBUG_STATE = 24;
  }

  Type type = 1;
  string source = 2;
  string module = 3;
  string function = 4;
  string instance = 5;
  string subsystem = 6;
}

message Module {
  string module = 1;
  string source = 2;   // MODULE_SOURCE_NEW, MODULE_SOURCE_EXIST
  bool compiled = 3;   // MODULE_UPLOAD_EXIST, MODULE_SOURCE_EXIST
  int64 length = 4;    // MODULE_DOWNLOAD
  int32 tag_count = 5; // MODULE_PIN
}

message Instance {
  string instance = 1;
  string module = 2;     // INSTANCE_CREATE, INSTANCE_SNAPSHOT
  string function = 3;   // INSTANCE_RESUME
  bool transient = 4;    // INSTANCE_CREATE_KNOWN, INSTANCE_CREATE_STREAM
  bool suspended = 5;    // INSTANCE_CREATE_KNOWN, INSTANCE_CREATE_STREAM
  bool persist = 6;      // INSTANCE_UPDATE
  bool compiled = 7;     // INSTANCE_DEBUG
  api.Status status = 8; // INSTANCE_STOP
  int32 tag_count = 9;   // INSTANCE_CREATE_KNOWN, INSTANCE_CREATE_STREAM, INSTANCE_UPDATE
}

message Event {
  Type type = 1;
  api.Meta meta = 2;
  oneof info {
    Fail fail = 3;
    Module module = 4;
    Instance instance = 5;
  }
}
